---
# A playbook to build GCC

- hosts: all
  vars:
    pkg: gcc
    srcdir: ${pkg}-${version}
    tarball: ${srcdir}.tar.bz2
    url: http://www.netgull.com/gcc/releases/${srcdir}/${tarball}

    configure_env: ""
    make_env:
      LD_LIBRARY_PATH: ${pkg_install_dir}/lib
      LIBRARY_PATH: "/usr/lib/${gccma.stdout}"
      C_INCLUDE_PATH: "/usr/include/${gccma.stdout}"
      CPLUS_INCLUDE_PATH: "/usr/include/${gccma.stdout}"
      CPATH: "/usr/include/${gccma.stdout}"

    # null this out so configure uses defaults
    qualifiers: ""

  tasks:
    
    - shell: gcc -print-multiarch
      register: gccma
    
    - debug: msg="GCC multiarch is ${gccma.stdout}"

    - include: $top/tasks/directories.yml

    - include: $top/tasks/download.yml

    - include: $top/tasks/untar.yml tar_opts=-xjf

    - include: $top/tasks/configure.yml 
      vars:
        configure_opts: "--with-gmp=${pkg_install_dir} --with-mpc=${pkg_install_dir} --with-mpfr=${pkg_install_dir} --with-ppl=${pkg_install_dir} --with-cloog=${pkg_install_dir} --enable-cloog-backend=isl --with-gnu-as --with-gnu-ld --disable-libgc"

    - include: $top/tasks/dumpenv.yml

    - include: $top/tasks/make.yml makes=gcc/g++  installs=bin/g++

