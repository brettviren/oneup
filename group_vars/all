--- # -*- yaml -*- # ---
# Define variables for a product.  
#
# They are based on variables defined else where:
#
# The host_vars/ file must define: "products"
#
# The products/ file must define "pkg", "srcdir" and "tarball".  
#
# In addition, some variables are gathered as facts.

# Set a list of qualifier words that will be interpreted at
# configure/compile time in the group_vars or host_vars file.  Default
# is the empty set.
qualifiers: []

# Set a variant label to go with the qualifiers.  This is tacked on to
# the flavor in defining the install directory.
variant: ""

# A platform specific label.  This may be overridden in more specific
# group_vars/* files.
flavor: ${ansible_system}+${ansible_distribution}${ansible_distribution_version}

# The current package's native version string from the products data structure
version: ${products.${pkg}.version}

# The full path to the current source tarball
tar_file: ${source_cache}/${tarball}

# The temporary area where source is unpacked and package is built
#pkg_temp_dir: "${build_base}/${pkg}/${version}/${flavor}"
pkg_temp_dir: $TEMPLATE($top/templates/pkg_temp_dir.j2)

# The unpacked source directory
#pkg_source_dir: "${pkg_temp_dir}/${srcdir}"
pkg_source_dir: $TEMPLATE($top/templates/pkg_source_dir.j2)

# Directory in which to build the package
#pkg_build_dir: "${pkg_temp_dir}/build"
pkg_build_dir: $TEMPLATE($top/templates/pkg_build_dir.j2)

# The installation directory for the current package.  
# pkg_install_dir:     "${install_base}/${pkg}/${version}/${flavor}"
pkg_install_dir: $TEMPLATE($top/templates/pkg_install_dir.j2)

# The installation directory as an interpolatable pattern
# pkg_install_pattern: "${install_base}/%(pkg)s/%(version)s/${flavor}"

# Set default values for task arguments

# Set an environment dictionary for the configure.yml tasks
configure_env: {}

# Set an environment dictionary for the make.yml tasks
make_env: {}

# Used to set tar options
tar_opts: ""

configure_creates: config.status

global_testenv: 
  TEST_VARC: VALC



